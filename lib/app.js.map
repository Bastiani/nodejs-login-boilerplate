{"version":3,"sources":["../src/app.js"],"names":["loaders","app","Koa","router","Router","graphqlSettingsPerReq","req","dataloaders","user","header","authorization","console","log","graphiql","process","env","NODE_ENV","schema","pretty","context","extensions","document","variables","operationName","result","formatError","error","message","locations","stack","graphqlServer","use","all","endpoint","routes","allowedMethods"],"mappings":";;;;;;AAEA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;AACA;;AAEA;;;;AACA;;IAAYA,O;;AACZ;;;;;;AAXA;AAaA,MAAMC,MAAM,IAAIC,aAAJ,EAAZ;AACA,MAAMC,SAAS,IAAIC,mBAAJ,EAAf;;AAEA,MAAMC,wBAAwB,MAAOC,GAAP,IAAe;AAC3C,QAAMC,cAAc,MAAM,4BAAeP,OAAf,CAA1B;AACA,QAAM,EAAEQ,IAAF,KAAW,MAAM,qBAAQD,WAAR,EAAqBD,IAAIG,MAAJ,CAAWC,aAAhC,CAAvB;AACAC,UAAQC,GAAR,CAAY,iBAAZ,EAA+BJ,IAA/B,EAAqCF,IAAIG,MAAJ,CAAWC,aAAhD;;AAEA,SAAO;AACLG,cAAUC,QAAQC,GAAR,CAAYC,QAAZ,KAAyB,YAD9B;AAELC,4BAFK;AAGLC,YAAQ,IAHH;AAILC,aAAS;AACPX,UADO;AAEPF,SAFO;AAGPC;AAHO,KAJJ;AASLa,gBAAY,CAAC;AACXC,cADW,EACDC,SADC,EACUC,aADV,EACyBC;AADzB,KAAD,KAEN;AACJb,cAAQC,GAAR,CAAY,qBAAMS,QAAN,CAAZ;AACAV,cAAQC,GAAR,CAAYU,SAAZ;AACAX,cAAQC,GAAR,CAAYW,aAAZ,EAA2BC,MAA3B;AACD,KAfI;AAgBLC,iBAAcC,KAAD,IAAW;AACtBf,cAAQC,GAAR,CAAYc,MAAMC,OAAlB;AACAhB,cAAQC,GAAR,CAAYc,MAAME,SAAlB;AACAjB,cAAQC,GAAR,CAAYc,MAAMG,KAAlB;;AAEA,aAAO;AACLF,iBAASD,MAAMC,OADV;AAELC,mBAAWF,MAAME,SAFZ;AAGLC,eAAOH,MAAMG;AAHR,OAAP;AAKD;AA1BI,GAAP;AA4BD,CAjCD;;AAmCA,MAAMC,gBAAgB,0BAAQ,0BAAYzB,qBAAZ,CAAR,CAAtB;;AAEAJ,IAAI8B,GAAJ,CAAQ,wBAAR;;AAEA5B,OAAO6B,GAAP,CAAW,UAAX,EAAuBF,aAAvB;AACA3B,OAAO6B,GAAP,CACE,aADF,EAEE,gDAAc;AACZC,YAAU;AADE,CAAd,CAFF;;AAOAhC,IAAI8B,GAAJ,CAAQ5B,OAAO+B,MAAP,EAAR,EAAyBH,GAAzB,CAA6B5B,OAAOgC,cAAP,EAA7B;;kBAEelC,G","file":"app.js","sourcesContent":["// @flow\n/* eslint-disable no-console */\nimport Koa from 'koa';\nimport Router from 'koa-router';\nimport graphqlHttp from 'koa-graphql';\nimport cors from 'koa-cors';\nimport convert from 'koa-convert';\nimport { print } from 'graphql/language';\nimport { koaPlayground } from 'graphql-playground-middleware';\n\nimport schema from './schema';\nimport * as loaders from './graphql/loader';\nimport { getUser, getDataloaders } from './helper';\n\nconst app = new Koa();\nconst router = new Router();\n\nconst graphqlSettingsPerReq = async (req) => {\n  const dataloaders = await getDataloaders(loaders);\n  const { user } = await getUser(dataloaders, req.header.authorization);\n  console.log('=======>>>> app', user, req.header.authorization);\n\n  return {\n    graphiql: process.env.NODE_ENV !== 'production',\n    schema,\n    pretty: true,\n    context: {\n      user,\n      req,\n      dataloaders,\n    },\n    extensions: ({\n      document, variables, operationName, result,\n    }) => {\n      console.log(print(document));\n      console.log(variables);\n      console.log(operationName, result);\n    },\n    formatError: (error) => {\n      console.log(error.message);\n      console.log(error.locations);\n      console.log(error.stack);\n\n      return {\n        message: error.message,\n        locations: error.locations,\n        stack: error.stack,\n      };\n    },\n  };\n};\n\nconst graphqlServer = convert(graphqlHttp(graphqlSettingsPerReq));\n\napp.use(cors());\n\nrouter.all('/graphql', graphqlServer);\nrouter.all(\n  '/playground',\n  koaPlayground({\n    endpoint: '/graphql',\n  }),\n);\n\napp.use(router.routes()).use(router.allowedMethods());\n\nexport default app;\n"]}